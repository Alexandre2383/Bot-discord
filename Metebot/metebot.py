from decimal import *
import requests, json, random, datetime, asyncio
import discord
from discord.ext import commands, tasks
from datetime import datetime, timedelta
import time

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="/", intents=intents)

print("Bot script started")
# Variable des heures fixes d'envoie du messages
target_hours = [8, 13]

# D√©corateur de boucle: 1 fois par heure, v√©rifie si l'heure est == √† celle de la variable target_hours
@tasks.loop(minutes=1)
async def send_scheduled_message():
    now = datetime.now()#R√©cup√©re l'heure actuelle
    current_hour = now.hour#et la stocke dans la variable current_hour

    # Si l'heure actuelle correspond √† l'une des heures d√©finie
    if current_hour in target_hours:
        channel = bot.get_channel(1195068078120243325)
                # API key de OpenWeather
        api_key = "061e506eb621d872477330a8dae4cb76"

        # Variable du d√©but de l'url d'api openweather
        urlDebut = "http://api.openweathermap.org/data/2.5/weather?"
        
        # Give city name
        city_name = "Toulon"
        
        #Variable de l'url complete: d√©but d'url avec la API key et la ville
        urlComplete = urlDebut + "appid=" + api_key + "&q=" + city_name
        
        # initialisation de la variable response avec la requ√™te de la variable urlComplete avec get method
        response = requests.get(urlComplete)
        
        # Valeur du json d'openweather converti en list
        listeMeteo = response.json()
        # listeMeteo contient la liste du fichier json r√©cup√©r√©
        # Si erreur "404", une erreur dans la variable listeMeteo(ici la ville n'a pas √©t√© trouv√©)
        if listeMeteo["cod"] != "404":
            # initialise la variable info avec la partie 'main' du fichier json
            info = listeMeteo["main"]
            # initialise temperareActuelle avec la valeur de 'temp' situ√© dans 'main'
            temperature = info["temp"]
            # Convertie la valeur de temperature de kelvin en celsium
            temperature = temperature - 273.15

            # initialise humidite avec la valeur de 'humidity' situ√© dans 'main'
            humidite = info["humidity"]
        
            # r√©cup√©re la liste de weather et l'initialise dans a
            a = listeMeteo["weather"]

            #S√©lection des messages en fonction de l'id du temps(weather):
            # Thunderstorm/Temp√™te
            if 200 <= a[0]['id'] <= 232:
                # r√©cup√©re la valeur de 'description', premi√©re valeur de la liste a et l'initialise dans meteo
                meteo = a[0]["description"]
                message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n Bon courage ! ‚õàÔ∏èüö£‚Äç‚ôÇÔ∏è")
                                
            # Drizzle/Cracha
            elif 300<= a[0]['id'] <= 321:
                meteo = a[0]["description"]
                message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n Bienvenue au mois de Juillet en Bretagne üíÅüèº‚Äç‚ôÇÔ∏è‚òî")
                            
            # Rain/Pluie
            elif 500<= a[0]['id'] <= 521:
                meteo = a[0]["description"]
                message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n Il pleut il mouille, c'est la f√™te √† la grenouille üåßÔ∏èüê∏üé∂")
                            
            # Snow/Neige (r√™ve pas t'en verra jamais √† Toulon..)
            elif 600 <= a[0]['id'] <= 622:
                meteo = a[0]["description"]
                message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n STOP! Neige √† Toulon = Maison + Chocolat chaud üå®Ô∏èüì∫‚òï")
                
            # Clear/D√©gag√©
            elif a[0]['id'] == 800:
                meteo = a[0]["description"]
                message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n Y'a du soleil et des nanas la lalala la la üé∂‚òÄÔ∏èüíÉüèª")
            
            # Clouds/Nuageux
            elif 801<= a[0]['id'] <= 804:
                meteo = a[0]["description"]
                message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n Encore une journ√©e pour rester devant l'ordi üíª‚õÖ")
                
            elif 701 <= a[0]['id'] <= 781:
                #Mist/Fog/Smoke/Haze du brouillard quoi en gros
                if 701 <= a[0]['id'] <= 721 or a[0]['id'] == 741:
                    meteo = a[0]["description"]
                    message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n La t√™te dans l'cul, l'cul dans l'brouillard üå´Ô∏èüé∂")
                    
                # Dust n Sand and Dust or Sand
                elif a[0]['id'] == 731 or 751 <= a[0]['id'] <= 761:
                    meteo = a[0]["description"]
                    message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n Aujourd'hui c'est sirocco ! üí®üèúÔ∏è")
                    
                # Ash/Cendre
                elif a[0]['id'] == 762:
                    meteo = a[0]["description"]
                    message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n Si un jour ce message s'affiche, il faut commencer √† s'inqui√©ter üåã")

                # Squall/Rafale
                elif a[0]['id'] == 771:
                    meteo = a[0]["description"]
                    message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n Attention √ßa va souffler ! üå¨Ô∏èüí®")
                # Tornado
                elif a[0]['id'] == 781:
                    meteo = a[0]["description"]
                    message = (" Temperature actuelle = " + str(round(temperature, 1)) + "C¬∞\n" + " Taux d'humidit√©e = " + str(humidite) + "%\n M√©t√©o = " + str(meteo) + "\n Ca va secouer ! ü§∏‚Äç‚ôÇÔ∏èüå™Ô∏è")


            await channel.send(message)

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')
    # D√©marrer la t√¢che p√©riodique une fois que le bot est pr√™t
    send_scheduled_message.start()

@bot.command(name='meteo')
async def meteo(ctx):
    # API key de OpenWeather
    api_key = "061e506eb621d872477330a8dae4cb76"

    # Variable du d√©but de l'url d'api openweather
    urlDebut = "http://api.openweathermap.org/data/2.5/weather?"
    
    # Give city name
    city_name = "Toulon"
    
    #Variable de l'url complete: d√©but d'url avec la API key et la ville
    urlComplete = urlDebut + "appid=" + api_key + "&q=" + city_name
    
    # initialisation de la variable response avec la requ√™te de la variable urlComplete avec get method
    response = requests.get(urlComplete)
    
    # Valeur du json d'openweather converti en list
    listeMeteo = response.json()
    # listeMeteo contient la liste du fichier json r√©cup√©r√©
    # Si erreur "404", une erreur dans la variable listeMeteo(ici la ville n'a pas √©t√© trouv√©)
    if listeMeteo["cod"] != "404":
        # initialise la variable info avec la partie 'main' du fichier json
        info = listeMeteo["main"]
        # initialise temperareActuelle avec la valeur de 'temp' situ√© dans 'main'
        temperature = info["temp"]
        # Convertie la valeur de temperature de kelvin en celsium
        temperature = temperature - 273.15

        # initialise humidite avec la valeur de 'humidity' situ√© dans 'main'
        humidite = info["humidity"]
    
        # r√©cup√©re la liste de weather et l'initialise dans a
        a = listeMeteo["weather"]

        #S√©lection des messages en fonction de l'id du temps(weather):
        # Thunderstorm/Temp√™te
        if 200 <= a[0]['id'] <= 232:
            # r√©cup√©re la valeur de 'description', premi√©re valeur de la liste a et l'initialise dans meteo
            meteo = a[0]["description"]
            await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
            await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
            await ctx.send(f" M√©t√©o = {str(meteo)}")
            await ctx.send(f" Bon courage ! ‚õàÔ∏èüö£‚Äç‚ôÇÔ∏è")
            
        # Drizzle/Cracha
        elif 300<= a[0]['id'] <= 321:
            meteo = a[0]["description"]
            await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
            await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
            await ctx.send(f" M√©t√©o = {str(meteo)}")
            await ctx.send(f" Bienvenue au mois de Juillet en Bretagne üíÅüèº‚Äç‚ôÇÔ∏è‚òî")
        
        # Rain/Pluie
        elif 500<= a[0]['id'] <= 521:
            meteo = a[0]["description"]
            await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
            await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
            await ctx.send(f" M√©t√©o = {str(meteo)}")
            await ctx.send(f" Il pleut il mouille, c'est la f√™te √† la grenouille üåßÔ∏èüê∏üé∂")
        
        # Snow/Neige (r√™ve pas t'en verra jamais √† Toulon..)
        elif 600 <= a[0]['id'] <= 622:
            meteo = a[0]["description"]
            await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
            await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
            await ctx.send(f" M√©t√©o = {str(meteo)}")
            await ctx.send(f" STOP! Neige √† Toulon = Maison + Chocolat chaud üå®Ô∏èüì∫‚òï")
            
        # Clear/D√©gag√©
        elif a[0]['id'] == 800:
            meteo = a[0]["description"]
            await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
            await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
            await ctx.send(f" M√©t√©o = {str(meteo)}")
            await ctx.send(f" Y'a du soleil et des nanas la lalala la la üé∂‚òÄÔ∏èüíÉüèª")
        
        # Clouds/Nuageux
        elif 801<= a[0]['id'] <= 804:
            meteo = a[0]["description"]
            await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
            await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
            await ctx.send(f" M√©t√©o = {str(meteo)}")
            await ctx.send(f" Encore une journ√©e pour rester devant l'ordi üíª‚õÖ")
        
        elif 701 <= a[0]['id'] <= 781:
            #Mist/Fog/Smoke/Haze du brouillard quoi en gros
            if 701 <= a[0]['id'] <= 721 or a[0]['id'] == 741:
                meteo = a[0]["description"]
                await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
                await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
                await ctx.send(f" M√©t√©o = {str(meteo)}")
                await ctx.send(f" La t√™te dans l'cul, l'cul dans l'brouillard üå´Ô∏èüé∂")
             # Dust n Sand and Dust or Sand
            elif a[0]['id'] == 731 or 751 <= a[0]['id'] <= 761:
                meteo = a[0]["description"]
                await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
                await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
                await ctx.send(f" M√©t√©o = {str(meteo)}")
                await ctx.send(f" Aujourd'hui c'est sirocco ! üí®üèúÔ∏è")
            # Ash/Cendre
            elif a[0]['id'] == 762:
                meteo = a[0]["description"]
                await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
                await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
                await ctx.send(f" M√©t√©o = {str(meteo)}")
                await ctx.send(f" Si un jour ce message s'affiche, il faut commencer √† s'inqui√©ter üåã")
            # Squall/Rafale
            elif a[0]['id'] == 771:
                meteo = a[0]["description"]
                await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
                await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
                await ctx.send(f" M√©t√©o = {str(meteo)}")
                await ctx.send(f" Attention √ßa va souffler ! üå¨Ô∏èüí®")
            # Tornado
            elif a[0]['id'] == 781:
                meteo = a[0]["description"]
                await ctx.send(f" Temperature actuelle = {str(round(temperature, 1))}C¬∞")
                await ctx.send(f" Taux d'humidit√©e = {str(humidite)}%")
                await ctx.send(f" M√©t√©o = {str(meteo)}")
                await ctx.send(f" Ca va secouer ! ü§∏‚Äç‚ôÇÔ∏èüå™Ô∏è")



bot.run('MTE5NTM2MDEzOTIzOTI0Nzk4Mw.GK9shU.2rPv4ycbImlg0JmXEJHEbefyUcbDtauLvT69RM')
bot.close()

# # V√©rifie si la requ√™te a r√©ussi (code de statut 200)
# if response.status_code == 200:
#     listeMeteo = response.json()

#     # V√©rifie si la ville a √©t√© trouv√©e
#     if listeMeteo["cod"] != "404":
#         # Reste du code pour extraire et afficher les donn√©es
#     else:
#         await ctx.send("Ville non trouv√©e.")
# else:
#     await ctx.send("Erreur lors de la requ√™te √† l'API OpenWeatherMap."